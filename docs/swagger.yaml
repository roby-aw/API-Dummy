basePath: /
definitions:
  admin.Dashboard:
    properties:
      stock:
        type: integer
      user:
        type: integer
    type: object
  admin.LoginAdmin:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  admin.User:
    properties:
      alamat:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
    type: object
  admin.UserPoin:
    properties:
      alamat:
        type: string
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      poin:
        type: integer
    type: object
  dummy.AuthLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dummy.DetailTransaction:
    properties:
      id:
        type: integer
      jenis_transaction:
        type: string
      nama_bank:
        type: string
      no_rekening:
        type: integer
      poin_account:
        type: integer
      poin_redeem:
        type: integer
    type: object
  dummy.History:
    properties:
      id:
        type: integer
      status:
        type: string
      tanggal:
        type: string
      tipe_transaksi:
        type: string
    type: object
  dummy.Login:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      pin:
        type: integer
      poin:
        type: integer
      token:
        type: string
    type: object
host: api-dummy.herokuapp.com
info:
  contact: {}
  description: Berikut API-Loyalty Point Agent
  title: API-Loyalty Point Agent
  version: "1.0"
paths:
  /v1/account:
    put:
      consumes:
      - application/json
      description: UpdateUser
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: UpdateUser
      tags:
      - User
  /v1/admin/dashboard:
    get:
      consumes:
      - application/json
      description: Dashboard Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.Dashboard'
      summary: Dashboard Admin
      tags:
      - Admin
  /v1/admin/historycustomer:
    get:
      consumes:
      - application/json
      description: Customer history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.History'
      summary: Customer history
      tags:
      - Admin
  /v1/admin/login:
    post:
      consumes:
      - application/json
      description: Login Admin
      parameters:
      - description: Admin
        in: body
        name: LoginAdmin
        required: true
        schema:
          $ref: '#/definitions/admin.LoginAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.LoginAdmin'
      summary: Login
      tags:
      - Admin
  /v1/admin/managecustomer:
    get:
      consumes:
      - application/json
      description: Manage Customer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.User'
      summary: Manage Customer
      tags:
      - Admin
  /v1/admin/managecustomerpoint:
    get:
      consumes:
      - application/json
      description: Manage Customer Point
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.UserPoin'
      summary: Manage Customer Point
      tags:
      - Admin
  /v1/detailhistory/{id}:
    get:
      consumes:
      - application/json
      description: History/transaction User
      parameters:
      - description: id detail history
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.DetailTransaction'
      summary: Detail History/transaction
      tags:
      - User
  /v1/history/{iduser}:
    get:
      consumes:
      - application/json
      description: History User
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id user
        in: path
        name: iduser
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.History'
      summary: History
      tags:
      - User
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dummy.AuthLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.Login'
      summary: Login
      tags:
      - User
  /v1/order/cashout:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Cashout
      tags:
      - UserOrder
  /v1/order/emoney:
    post:
      consumes:
      - application/json
      description: Emoney user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Emoney
      tags:
      - UserOrder
  /v1/order/paketdata:
    post:
      consumes:
      - application/json
      description: PaketData user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order PaketData
      tags:
      - UserOrder
  /v1/order/pulsa:
    post:
      consumes:
      - application/json
      description: Pulsa user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Pulsa
      tags:
      - UserOrder
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register
      tags:
      - User
swagger: "2.0"
