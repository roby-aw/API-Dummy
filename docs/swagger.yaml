basePath: /
definitions:
  admin.CustomerHistory:
    properties:
      customer_id:
        type: integer
      keterangan:
        type: string
      nomor:
        type: string
      poin_redeem:
        type: integer
      status:
        type: string
      tanggal:
        type: string
    type: object
  admin.Dashboard:
    properties:
      customer_id:
        type: integer
      status_transaction:
        type: string
      transaction_id:
        type: string
    type: object
  admin.LoginAdmin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  admin.ManageCustomer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      no_hp:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - no_hp
    - password
    type: object
  admin.UpdateCustomerPoint:
    properties:
      id:
        type: integer
      poin_account:
        type: integer
    required:
    - poin_account
    type: object
  admin.UserPoin:
    properties:
      alamat:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
      poin:
        type: integer
    type: object
  dummy.AuthLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dummy.Customer:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      no_hp:
        type: string
      password:
        type: string
      pin:
        type: integer
      poin:
        type: integer
      token:
        type: string
    type: object
  dummy.DetailTransactionCustomer:
    properties:
      bank_provider:
        type: string
      createdat:
        type: string
      jenis_transaction:
        type: string
      nomor:
        type: string
      poin_account:
        type: integer
      poin_redeem:
        type: integer
      transaction_id:
        type: string
    type: object
  dummy.History:
    properties:
      id:
        type: integer
      keterangan:
        type: string
      status:
        type: string
      tanggal:
        type: string
      transaction_id:
        type: string
    type: object
  dummy.InputStockProduct:
    properties:
      stock:
        type: integer
    type: object
  dummy.OrderPulsa:
    properties:
      amount:
        type: integer
      bank_provider:
        type: string
      customer_id:
        type: integer
      nomor:
        type: string
      poin_account:
        type: integer
      poin_redeem:
        type: integer
    required:
    - amount
    - bank_provider
    - customer_id
    - nomor
    - poin_account
    - poin_redeem
    type: object
  dummy.Register:
    properties:
      email:
        type: string
      name:
        type: string
      no_hp:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - no_hp
    - password
    type: object
  dummy.StockProduct:
    properties:
      id:
        type: integer
      product:
        type: string
      stock:
        type: integer
    type: object
  dummy.UpdateCustomer:
    properties:
      idcustomer:
        type: integer
      name:
        type: string
      no_hp:
        type: string
      password:
        type: string
    required:
    - name
    - no_hp
    - password
    type: object
  mitra.AuthMitra:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  mitra.InputPoinMitra:
    properties:
      amount:
        type: integer
      idcustomer:
        type: integer
      idmitra:
        type: integer
    type: object
  mitra.Mitra:
    properties:
      alamat:
        type: string
      email:
        type: string
      id:
        type: integer
      nama_toko:
        type: string
      password:
        type: string
    type: object
  mitra.MitraRegister:
    properties:
      alamat:
        type: string
      email:
        type: string
      nama_toko:
        type: string
      password:
        type: string
    type: object
  response.ResponseGetProduct:
    properties:
      code:
        type: integer
      message:
        type: string
      result:
        items:
          $ref: '#/definitions/dummy.StockProduct'
        type: array
    type: object
host: api-dummy.herokuapp.com
info:
  contact: {}
  description: Berikut API-Loyalty Point Agent
  title: API-Loyalty Point Agent
  version: "1.0"
paths:
  /v1/admin/approve/{transactionid}:
    post:
      consumes:
      - application/json
      description: Approve Transaction
      parameters:
      - description: transaction_id
        in: path
        name: transactionid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Approve Transaction
      tags:
      - Admin
  /v1/admin/customer:
    get:
      consumes:
      - application/json
      description: Manage Customer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.ManageCustomer'
      summary: Manage Customer
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update customer data
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/admin.ManageCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.ManageCustomer'
      summary: Update customer data
      tags:
      - Admin
  /v1/admin/customerpoint:
    get:
      consumes:
      - application/json
      description: Manage Customer Point
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.UserPoin'
      summary: Manage Customer Point
      tags:
      - Admin
    put:
      consumes:
      - application/json
      description: Update customer point
      parameters:
      - description: Customer Point
        in: body
        name: UpdateCustomerPoint
        required: true
        schema:
          $ref: '#/definitions/admin.UpdateCustomerPoint'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Update customer point
      tags:
      - Admin
  /v1/admin/dashboard:
    get:
      consumes:
      - application/json
      description: Dashboard Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.Dashboard'
      summary: Dashboard Admin
      tags:
      - Admin
  /v1/admin/historycustomer:
    get:
      consumes:
      - application/json
      description: Customer history
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.CustomerHistory'
      summary: Customer history
      tags:
      - Admin
  /v1/admin/login:
    post:
      consumes:
      - application/json
      description: Login Admin
      parameters:
      - description: Admin
        in: body
        name: LoginAdmin
        required: true
        schema:
          $ref: '#/definitions/admin.LoginAdmin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/admin.LoginAdmin'
      summary: Login
      tags:
      - Admin
  /v1/customer:
    put:
      consumes:
      - application/json
      description: Update Customer
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: UpdateCustomer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/dummy.UpdateCustomer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.UpdateCustomer'
      summary: Update Customer
      tags:
      - Customer
  /v1/detailhistory/{transactionid}:
    get:
      consumes:
      - application/json
      description: History/transaction Customer
      parameters:
      - description: id detail history
        in: path
        name: transactionid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.DetailTransactionCustomer'
      summary: Detail History/transaction
      tags:
      - Customer
  /v1/history/{idcustomer}:
    get:
      consumes:
      - application/json
      description: History Customer
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: id customer
        in: path
        name: idcustomer
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.History'
      summary: History
      tags:
      - Customer
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login Customer
      parameters:
      - description: Customer
        in: body
        name: Customer
        required: true
        schema:
          $ref: '#/definitions/dummy.AuthLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.Customer'
      summary: Login
      tags:
      - Customer
  /v1/mitra/history:
    get:
      consumes:
      - application/json
      description: History Mitra
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: History Mitra
      tags:
      - Mitra
  /v1/mitra/inputpoin:
    post:
      consumes:
      - application/json
      description: Input Poin Mitra
      parameters:
      - description: InputPoinMitra
        in: body
        name: InputPoin
        required: true
        schema:
          $ref: '#/definitions/mitra.InputPoinMitra'
      produces:
      - application/json
      responses:
        "200":
          description: ""
      summary: Input Poin Mitra
      tags:
      - Mitra
  /v1/mitra/login:
    post:
      consumes:
      - application/json
      description: Login Mitra
      parameters:
      - description: mitra
        in: body
        name: mitra
        required: true
        schema:
          $ref: '#/definitions/mitra.AuthMitra'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mitra.Mitra'
      summary: Login Mitra
      tags:
      - Mitra
  /v1/mitra/register:
    post:
      consumes:
      - application/json
      description: Register Mitra
      parameters:
      - description: MitraRegister
        in: body
        name: RegisterMitra
        required: true
        schema:
          $ref: '#/definitions/mitra.MitraRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/mitra.MitraRegister'
      summary: Register Mitra
      tags:
      - Mitra
  /v1/order/emoney:
    post:
      consumes:
      - application/json
      description: Emoney user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Emoney/Cashout
      tags:
      - CustomerOrder
  /v1/order/paketdata:
    post:
      consumes:
      - application/json
      description: PaketData user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order PaketData
      tags:
      - CustomerOrder
  /v1/order/pulsa:
    post:
      consumes:
      - application/json
      description: Pulsa user
      parameters:
      - default: Bearer <Add access token here>
        description: Insert your access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: OrderPulsa
        in: body
        name: OrderPulsa
        required: true
        schema:
          $ref: '#/definitions/dummy.OrderPulsa'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.OrderPulsa'
      summary: Order Pulsa
      tags:
      - CustomerOrder
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register Customer
      parameters:
      - description: Register
        in: body
        name: RegisterCustomer
        required: true
        schema:
          $ref: '#/definitions/dummy.Register'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.Register'
      summary: Register
      tags:
      - Customer
  /v1/stockproduct:
    get:
      consumes:
      - application/json
      description: Get Stock Product
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseGetProduct'
      summary: Get Stock Product
      tags:
      - Product
  /v1/stockproduct/{id}:
    put:
      consumes:
      - application/json
      description: Update Stock Product
      parameters:
      - description: id product
        in: path
        name: id
        required: true
        type: integer
      - description: Update Stock Product
        in: body
        name: Product
        required: true
        schema:
          $ref: '#/definitions/dummy.InputStockProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.ResponseGetProduct'
      summary: Update Stock Product
      tags:
      - Product
swagger: "2.0"
