basePath: /
definitions:
  dummy.AuthLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  dummy.DetailTransaction:
    properties:
      id:
        type: integer
      jenis_transaction:
        type: string
      nama_bank:
        type: string
      no_rekening:
        type: integer
      poin_account:
        type: integer
      poin_redeem:
        type: integer
    type: object
  dummy.History:
    properties:
      id:
        type: integer
      status:
        type: string
      tanggal:
        type: string
      tipe_transaksi:
        type: string
    type: object
  dummy.Login:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      pin:
        type: integer
      poin:
        type: integer
      token:
        type: string
    type: object
  dummy.ProductCashout:
    properties:
      harga:
        type: integer
      id:
        type: integer
      poin:
        type: integer
    type: object
  dummy.ProductEmoney:
    properties:
      harga:
        type: integer
      id:
        type: integer
      poin:
        type: integer
    type: object
  dummy.ProductPaketData:
    properties:
      Internet:
        type: string
      harga:
        type: integer
      id:
        type: integer
      kuota:
        type: string
      poin:
        type: integer
    type: object
  dummy.ProductPulsa:
    properties:
      harga:
        type: integer
      id:
        type: integer
      poin:
        type: integer
    type: object
host: api-dummy.herokuapp.com
info:
  contact: {}
  description: Berikut API-Loyalty Point Agent
  title: API-Loyalty Point Agent
  version: "1.0"
paths:
  /v1/detailhistory/{id}:
    get:
      consumes:
      - application/json
      description: History/transaction User
      parameters:
      - description: id detail history
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.DetailTransaction'
      summary: Detail History/transaction
      tags:
      - User
  /v1/history/{iduser}:
    get:
      consumes:
      - application/json
      description: History User
      parameters:
      - description: id user
        in: path
        name: iduser
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.History'
      summary: History
      tags:
      - User
  /v1/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dummy.AuthLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dummy.Login'
      summary: Login
      tags:
      - User
  /v1/order/cashout:
    post:
      consumes:
      - application/json
      description: Register user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Cashout
      tags:
      - UserOrder
  /v1/order/emoney:
    post:
      consumes:
      - application/json
      description: Emoney user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Emoney
      tags:
      - UserOrder
  /v1/order/paketdata:
    post:
      consumes:
      - application/json
      description: PaketData user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order PaketData
      tags:
      - UserOrder
  /v1/order/pulsa:
    post:
      consumes:
      - application/json
      description: Pulsa user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Order Pulsa
      tags:
      - UserOrder
  /v1/product/cashout:
    get:
      consumes:
      - application/json
      description: Product CashOut user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dummy.ProductCashout'
            type: array
      summary: Product CashOut
      tags:
      - Product
  /v1/product/emoney:
    get:
      consumes:
      - application/json
      description: Product EMoney user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dummy.ProductEmoney'
            type: array
      summary: Product EMoney
      tags:
      - Product
  /v1/product/paketdata:
    get:
      consumes:
      - application/json
      description: Product PaketData user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dummy.ProductPaketData'
            type: array
      summary: Product PaketData
      tags:
      - Product
  /v1/product/pulsa:
    get:
      consumes:
      - application/json
      description: Product Pulsa user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dummy.ProductPulsa'
            type: array
      summary: Product Pulsa
      tags:
      - Product
  /v1/register:
    post:
      consumes:
      - application/json
      description: Register user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Register
      tags:
      - User
swagger: "2.0"
